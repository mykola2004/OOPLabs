/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package stringcalculator;

import org.junit.jupiter.api.Test;

import static org.junit.Assert.assertEquals;

public class StringCalculatorTest {
    @Test
    public void testEmptyString() {
        assertEquals(0, StringCalculator.Add(""));
    }

    @Test
    public void testSingleNumber() {
        assertEquals(1, StringCalculator.Add("1"));
    }

    @Test
    public void testTwoNumbers() {
        assertEquals(3, StringCalculator.Add("1,2"));
    }

    @Test
    public void testFourNumbers() {
        assertEquals(5, StringCalculator.Add("1,2,1,1"));
    }
    @Test
    public void testComaNewline() {
        assertEquals(5, StringCalculator.Add("1,2,1\n1"));
    }

    @Test
    public void testOneCustomDelim1() {
        assertEquals(7, StringCalculator.Add("//;\n1;2,2\n2"));
    }

    @Test
    public void testOneCustomDelim2() {
        assertEquals(23, StringCalculator.Add("//[m]\n1m2,2\n10m8"));
    }

    @Test
    public void testNegativeNumbers1() {
        try {
            StringCalculator.Add("1,-2,3,-4");
        } catch (IllegalArgumentException e) {
            assertEquals("Negatives not allowed: [-2, -4]", e.getMessage());
        }
    }

    @Test
    public void testNegativeNumbers2() {
        try {
            StringCalculator.Add("//[m]\n1m-2,-9\n1m8");
        } catch (IllegalArgumentException e) {
            assertEquals("Negatives not allowed: [-2, -9]", e.getMessage());
        }
    }

    @Test
    public void testNumbersLargerThan1000() {
        assertEquals(25, StringCalculator.Add("//[s]\n3s4,9002\n10s8"));
    }

}